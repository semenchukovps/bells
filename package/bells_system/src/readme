main.cpp
	void quitHandle - не работает(не добавил проверку bellContinue в циклы, если добавить - скорее всего заработает)
	while(tmr->getTimerCount() >= conf->getBellCount()) - переходит сюда когда звонки на этот день закончились, ожидается наступление нового дня и переустановка расписания
	
	есть блокировка таймера, если менее чем за 30 секунд до его истечения нажата кнопка(удаляется таймер и выставляется следующий по расписанию)
	
GPIOClass.cpp
	scan_gpio_input() - наверно стоило бы пересмотреть эту функцию, так как нету логгирования нажатия кнопки вручную

timer.cpp
	вынес переменные и функцию startRing за класс
	как понял, структура sigaction требует статистической функции. была до этого реализация этой функции как статический метод класса при помощи преобразований типов,
	но по ходу разработки начались конфликты (скорее всего из за вынесеных переменных, возможно если пересмотреть - то можно вернуть эту функцию обратно в класс, то есть внести 		вынесенные переменные обратно. для чего выносил - неясно, наверно и не стоило)
 
	в функцию startTimer() передается обьект класса конфига для доступа к структуре расписания, от наследования ради этой структуры было решено отказаться(что из этого лучше - 	не вник)
	
Основные нюансы и мысли, вроде как особых костылей не вставлял
	
	 

